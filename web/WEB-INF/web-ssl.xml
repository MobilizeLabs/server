<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
         
  <!--  Filters: executed in the order in which they are defined in this file, but specific to the filter-mappings -->
  
  <!--  Pushes the session id into the Log4J NDC for each request thread. The NDC is a Stack that is dumped to the log 
        for all Log4J messages.
  -->
  <filter>
    <filter-name>Log4jNdcFilter</filter-name>
    <filter-class>org.ohmage.jee.filter.Log4jNdcFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>Log4jNdcFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping> 
  
  <!--  Enforces UTF-8 character encoding on all requests. --> 
  <filter>
    <filter-name>Utf8RequestEncodingFilter</filter-name>
    <filter-class>org.ohmage.jee.filter.Utf8RequestEncodingFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>Utf8RequestEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- Servlets.  Note that url-patterns are matched against initial (or re-dispatched) requests, not a request possibly modified
       by filters.  -->

  <!--  The default Tomcat Servlet used to locate and serve static content -->
  <servlet>
    <servlet-name>default</servlet-name>
    <servlet-class>org.apache.catalina.servlets.DefaultServlet</servlet-class>
    <init-param>
      <param-name>debug</param-name>
      <param-value>0</param-value>
    </init-param>
    <init-param>
      <param-name>listings</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.html</url-pattern>
  </servlet-mapping>
  
  <!-- Server Configuration Information Read -->
  <servlet>
    <description>
      Give information about the server. 
    </description>
    <servlet-name>ConfigReadServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>configReadAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>configReadController</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>configReadHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>configReadResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>ConfigReadServlet</servlet-name>
    <url-pattern>/config/read</url-pattern>
  </servlet-mapping>
  
  <!-- Create Users -->
  <servlet>
    <description>
      Create a user. 
    </description>
    <servlet-name>UserCreationServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>userCreationAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>userCreationController</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>userCreationHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>userCreationResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>UserCreationServlet</servlet-name>
    <url-pattern>/user/create</url-pattern>
  </servlet-mapping>
  
  <!-- Read Personal Information About Users -->
  <servlet>
    <description>
      Give personal information about other users. 
    </description>
    <servlet-name>UserReadServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>userReadAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>userReadController</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>userReadHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>userReadResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>UserReadServlet</servlet-name>
    <url-pattern>/user/read</url-pattern>
  </servlet-mapping>
  
  <!-- Update Users -->
  <servlet>
    <description>
      Update a user. 
    </description>
    <servlet-name>UserUpdateServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>userUpdateAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>userUpdateController</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>userUpdateHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>userUpdateResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>UserUpdateServlet</servlet-name>
    <url-pattern>/user/update</url-pattern>
  </servlet-mapping>
  
  <!-- Delete Users -->
  <servlet>
    <description>
      Delete a user. 
    </description>
    <servlet-name>UserDeletionServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>userDeletionAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>userDeletionController</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>userDeletionHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>userDeletionResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>UserDeletionServlet</servlet-name>
    <url-pattern>/user/delete</url-pattern>
  </servlet-mapping>
  
  <!--  Mobility Data Upload -->
  <servlet>
    <description>
      processes mobility data uploads from a client 
    </description>
    <servlet-name>MobilityUploadServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <!--  The following init-params are used to map the servlet to Spring-configured beans that ultimately service the request. 
          The param-value elements are Spring bean ids. All other AwDataServlets defined in this file use the same configuration style -->
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>mobilityUploadAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>mobilityUploadController</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>mobilityUploadHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>successOrFailResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>MobilityUploadServlet</servlet-name>
    <url-pattern>/mobility/upload</url-pattern>
  </servlet-mapping>
 
  <!-- Survey Data Upload -->
  <servlet>
    <description>
      processes survey data uploads from a client 
    </description>
    <servlet-name>SurveyUploadServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>surveyUploadAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>surveyUploadController</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>surveyUploadHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>successOrFailResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>SurveyUploadServlet</servlet-name>
    <url-pattern>/survey/upload</url-pattern>
  </servlet-mapping>
  
  <!--  Image Data Upload -->
  <servlet>
    <description>
      processes image data uploads from a client 
    </description>
    <servlet-name>ImageUploadServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>imageUploadAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>imageUploadController</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>imageUploadHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>successOrFailResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>ImageUploadServlet</servlet-name>
    <url-pattern>/image/upload</url-pattern>
  </servlet-mapping>
   
  <!-- Stateless Authentication -->
  <servlet>
    <description>
     performs an authentication check for client login - the request is stateless so no token is returned
    </description>
    <servlet-name>AuthStatelessServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>authAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>authHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>authStatelessController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>authStatelessResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>AuthStatelessServlet</servlet-name>
    <url-pattern>/user/auth</url-pattern>
  </servlet-mapping>
  
  <!-- Token-based Authentication -->
  <servlet>
    <description>
     performs an authentication check for client login and returns a token and a list of campaigns for a successfully
     authenticated user
    </description>
    <servlet-name>AuthTokenServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>authAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>authHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>authTokenController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>authTokenResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>AuthTokenServlet</servlet-name>
    <url-pattern>/user/auth_token</url-pattern>
  </servlet-mapping>
    
  <!--  handle campaign queries  -->
  <servlet>
    <description>
      returns campaigns with different output formats   
    </description>
    <servlet-name>CampaignReadServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>campaignReadController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>campaignReadAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>campaignReadHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>campaignReadResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>CampaignReadServlet</servlet-name>
    <url-pattern>/campaign/read</url-pattern>
  </servlet-mapping>
    
  <!-- Read survey responses   -->
  <servlet>
    <description>
      allows users to query survey responses, returning output in a variety of formats 
    </description>
    <servlet-name>SurveyResponseReadServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>surveyResponseReadController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>surveyResponseReadAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>surveyResponseReadHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>surveyResponseReadResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>SurveyResponseReadServlet</servlet-name>
    <url-pattern>/survey_response/read</url-pattern>
  </servlet-mapping>
  
  <!-- Update survey responses -->
  <servlet>
    <description>
      allows users to update the privacy state on survey responses 
    </description>
    <servlet-name>SurveyResponseUpdateServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>surveyResponseUpdateController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>surveyResponseUpdateAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>surveyResponseUpdateHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>successOrFailResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>SurveyResponseUpdateServlet</servlet-name>
    <url-pattern>/survey_response/update</url-pattern>
  </servlet-mapping>
  
    <!-- Delete survey responses -->
  <servlet>
    <description>
      allows users to delete survey responses 
    </description>
    <servlet-name>SurveyResponseDeleteServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>surveyResponseDeleteController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>surveyResponseDeleteAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>surveyResponseDeleteHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>successOrFailResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>SurveyResponseDeleteServlet</servlet-name>
    <url-pattern>/survey_response/delete</url-pattern>
  </servlet-mapping>
  
  <!-- Handle user info queries -->
  <servlet>
  	<description>
  	  runs user info queries on the current user or a list of users based on params
  	</description>
  	<servlet-name>UserInfoQueryServlet</servlet-name>
  	<servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>userInfoQueryController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>userInfoQueryAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>userInfoQueryHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>userInfoQueryResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>UserInfoQueryServlet</servlet-name>
    <url-pattern>/user_info/read</url-pattern>
  </servlet-mapping>
  
  <!--  Handle user stat queries -->
  <servlet>
    <description>
      runs user stats queries (successful location updates, most recent activity) 
    </description>
    <servlet-name>UserStatsQueryServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>userStatsQueryController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>userStatsQueryAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>userStatsQueryHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>userStatsQueryResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>UserStatsQueryServlet</servlet-name>
    <url-pattern>/user_stats/read</url-pattern>
  </servlet-mapping>
  
   <!--  Handle image queries -->
  <servlet>
    <description>
      runs image queries 
    </description>
    <servlet-name>ImageQueryServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>imageQueryController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>imageQueryAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>imageQueryHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>imageQueryResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>ImageQueryServlet</servlet-name>
    <url-pattern>/image/read</url-pattern>
  </servlet-mapping>
  
  <!--  Handle mobility queries -->
  <servlet>
    <description>
      runs mobility queries 
    </description>
    <servlet-name>MobilityQueryServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>mobilityDataPointQueryController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>mobilityQueryAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>mobilityQueryHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>mobilityQueryResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>MobilityQueryServlet</servlet-name>
    <url-pattern>/mobility/read</url-pattern>
  </servlet-mapping>
  
  <!--  Handle "chunked" mobility queries -->
  <servlet>
    <description>
      runs chunked mobility queries 
    </description>
    <servlet-name>ChunkedMobilityQueryServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>chunkedMobilityDataPointQueryController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>chunkedMobilityQueryAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>chunkedMobilityQueryHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>mobilityQueryResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>ChunkedMobilityQueryServlet</servlet-name>
    <url-pattern>/mobility/read/chunked</url-pattern>
  </servlet-mapping>
  
  <!-- Handle campaign creation -->
  <servlet>
    <description>
      Adds a campaign to the server.
    </description>
    <servlet-name>CampaignCreationServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>campaignCreationHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>campaignCreationAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>campaignCreationController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>campaignCreationResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>CampaignCreationServlet</servlet-name>
    <url-pattern>/campaign/create</url-pattern>
  </servlet-mapping>
  
  <!-- Handle campaign deletion -->
  <servlet>
    <description>
      Deletes a campaign from the server.
    </description>
    <servlet-name>CampaignDeletionServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>campaignDeletionHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>campaignDeletionAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>campaignDeletionController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>campaignDeletionResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>CampaignDeletionServlet</servlet-name>
    <url-pattern>/campaign/delete</url-pattern>
  </servlet-mapping>
  
  <!-- Handle campaign update -->
  <servlet>
    <description>
      Updates a campaign.
    </description>
    <servlet-name>CampaignUpdateServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>campaignUpdateHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>campaignUpdateAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>campaignUpdateController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>campaignUpdateResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>CampaignUpdateServlet</servlet-name>
    <url-pattern>/campaign/update</url-pattern>
  </servlet-mapping>
  
  <!-- Handle class create -->
  <servlet>
    <description>
      Creates a new class.
    </description>
    <servlet-name>ClassCreationServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>classCreationHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>classCreationAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>classCreationController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>classCreationResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>ClassCreationServlet</servlet-name>
    <url-pattern>/class/create</url-pattern>
  </servlet-mapping>
  
  <!-- Handle class reads -->
  <servlet>
    <description>
      Reads data about a class.
    </description>
    <servlet-name>ClassReadServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>classReadHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>classReadAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>classReadController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>classReadResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>ClassReadServlet</servlet-name>
    <url-pattern>/class/read</url-pattern>
  </servlet-mapping>
  
  <!-- Handle class updates -->
  <servlet>
    <description>
      Updates a class.
    </description>
    <servlet-name>ClassUpdateServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>classUpdateHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>classUpdateAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>classUpdateController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>classUpdateResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>ClassUpdateServlet</servlet-name>
    <url-pattern>/class/update</url-pattern>
  </servlet-mapping>
  
  <!-- Handle class deletion -->
  <servlet>
    <description>
      Deletes a class.
    </description>
    <servlet-name>ClassDeletionServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>classDeletionHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>classDeletionAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>classDeletionController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>classDeletionResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>ClassDeletionServlet</servlet-name>
    <url-pattern>/class/delete</url-pattern>
  </servlet-mapping>
  
  <!-- Handle document creation -->
  <servlet>
    <description>
      Creates a document
    </description>
    <servlet-name>DocumentCreationServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>documentCreationHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>documentCreationAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>documentCreationController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>documentCreationResponseWriter</param-value>
    </init-param>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>DocumentCreationServlet</servlet-name>
    <url-pattern>/document/create</url-pattern>
  </servlet-mapping>
  
  <!-- Handle reading information about a document -->
  <servlet>
    <description>
      Returns the document's information
    </description>
    <servlet-name>DocumentReadServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>documentReadHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>documentReadAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>documentReadController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>documentReadResponseWriter</param-value>
    </init-param>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>DocumentReadServlet</servlet-name>
    <url-pattern>/document/read</url-pattern>
  </servlet-mapping>
  
  <!-- Handle reading the actual document -->
  <servlet>
    <description>
      Returns the document's contents
    </description>
    <servlet-name>DocumentReadContentsServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>documentReadContentsHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>documentReadContentsAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>documentReadContentsController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>documentReadContentsResponseWriter</param-value>
    </init-param>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>DocumentReadContentsServlet</servlet-name>
    <url-pattern>/document/read/contents</url-pattern>
  </servlet-mapping>
  
  <!-- Handle updating the document -->
  <servlet>
    <description>
      Updates the document.
    </description>
    <servlet-name>DocumentUpdateServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>documentUpdateHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>documentUpdateAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>documentUpdateController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>documentUpdateResponseWriter</param-value>
    </init-param>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>DocumentUpdateServlet</servlet-name>
    <url-pattern>/document/update</url-pattern>
  </servlet-mapping>
  
  <!-- Handle document deletion -->
  <servlet>
    <description>
      Deletes a document
    </description>
    <servlet-name>DocumentDeletionServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>documentDeletionHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>documentDeletionAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>documentDeletionController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>documentDeletionResponseWriter</param-value>
    </init-param>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>DocumentDeletionServlet</servlet-name>
    <url-pattern>/document/delete</url-pattern>
  </servlet-mapping>
  
  <!-- Handle Change Password Requests -->
  <servlet>
    <description>
      Changes a user's password.
    </description>
    <servlet-name>PasswordChangeServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>passwordChangeHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>passwordChangeAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>passwordChangeController</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>passwordChangeResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>PasswordChangeServlet</servlet-name>
    <url-pattern>/user/change_password</url-pattern>
  </servlet-mapping>
  
  <!--  Handle data point function queries -->
  <servlet>
    <description>
      runs data point function queries 
    </description>
    <servlet-name>DataPointFunctionQueryServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>dataPointFunctionQueryController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>dataPointFunctionQueryAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>dataPointFunctionQueryHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>dataPointFunctionQueryResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>DataPointFunctionQueryServlet</servlet-name>
    <url-pattern>/survey_response/function/read</url-pattern>
  </servlet-mapping>
  
  <!-- Visualization APIs -->
  
  <!-- Survey Response Count -->
  <servlet>
    <description>
      Survey Response Count Visualization API 
    </description>
    <servlet-name>VizSurveyResponseCountServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>vizSurveyResponseCountController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>vizSurveyResponseCountAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>vizSurveyResponseCountHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>vizSurveyResponseCountResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>VizSurveyResponseCountServlet</servlet-name>
    <url-pattern>/viz/survey_response_count/read</url-pattern>
  </servlet-mapping>
  
  <!-- User Timeseries -->
  <servlet>
    <description>
      User Timeseries Visualization API 
    </description>
    <servlet-name>VizUserTimeseriesServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>vizUserTimeseriesController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>vizUserTimeseriesAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>vizUserTimeseriesHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>vizUserTimeseriesResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>VizUserTimeseriesServlet</servlet-name>
    <url-pattern>/viz/user_timeseries/read</url-pattern>
  </servlet-mapping>
  
  <!-- Prompt Timeseries -->
  <servlet>
    <description>
      Prompt Timeseries Visualization API 
    </description>
    <servlet-name>VizPromptTimeseriesServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>vizPromptTimeseriesController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>vizPromptTimeseriesAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>vizPromptTimeseriesHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>vizPromptTimeseriesResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>VizPromptTimeseriesServlet</servlet-name>
    <url-pattern>/viz/prompt_timeseries/read</url-pattern>
  </servlet-mapping>
  
  <!-- Prompt Timeseries -->
  <servlet>
    <description>
      Prompt Distribution Visualization API 
    </description>
    <servlet-name>VizPromptDistributionServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>vizPromptDistributionController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>vizPromptDistributionAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>vizPromptDistributionHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>vizPromptDistributionResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>VizPromptDistributionServlet</servlet-name>
    <url-pattern>/viz/prompt_distribution/read</url-pattern>
  </servlet-mapping>
  
  <!-- Prompt Timeseries -->
  <servlet>
    <description>
      Scatter Plot Visualization API 
    </description>
    <servlet-name>VizScatterPlotServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>vizScatterPlotController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>vizScatterPlotAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>vizScatterPlotHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>vizScatterPlotResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>VizScatterPlotServlet</servlet-name>
    <url-pattern>/viz/scatter_plot/read</url-pattern>
  </servlet-mapping>
  
  <!-- Prompt Timeseries -->
  <servlet>
    <description>
      2D Density Visualization API 
    </description>
    <servlet-name>VizTwoDDensityServlet</servlet-name>
    <servlet-class>org.ohmage.jee.servlet.AwDataServlet</servlet-class>
    <init-param>
      <param-name>controllerName</param-name>
      <param-value>vizTwoDDensityController</param-value>
    </init-param>
    <init-param>
      <param-name>awRequestCreatorName</param-name>
      <param-value>vizTwoDDensityAwRequestCreator</param-value>
    </init-param>
    <init-param>
      <param-name>httpServletRequestValidatorName</param-name>
      <param-value>vizTwoDDensityHttpServletRequestValidator</param-value>
    </init-param>
    <init-param>
      <param-name>responseWriterName</param-name>
      <param-value>vizTwoDDensityResponseWriter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>VizTwoDDensityServlet</servlet-name>
    <url-pattern>/viz/2d_density/read</url-pattern>
  </servlet-mapping>
  
  <!-- End Visualization APIs -->
  
  <!-- For AW 2.x and up, the server app is effectively headless. There is probably a better way to return headers only.
       empty.html is returned in order override the default Tomcat error pages. It is rarely a good idea to give away 
       information about the app server and the Tomcat pages do just that. -->
  <welcome-file-list>
    <welcome-file>/empty.html</welcome-file>
  </welcome-file-list>
  <error-page>
    <error-code>500</error-code>
    <location>/empty.html</location>
  </error-page>
  <error-page>
    <error-code>404</error-code>
    <location>/empty.html</location>
  </error-page>
  <error-page>
    <error-code>405</error-code>
    <location>/empty.html</location>
  </error-page>
  
  <!-- Parameter with comma separated list of files (or patterns) that tells Spring where to pick up bean configurations. -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/spring/*.xml</param-value>
  </context-param>

  <!-- The order of the following listener components is important - ContextLoaderListener must be last. -->
  <!-- Bootstrap listener to initialize Log4J.  Having this one here (before Spring is bootstrapped with its ContextLoaderListener)
       ensures Log4J is configured before Spring spits out logging messages. -->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>

  <!-- Provide temp directory cleanup (for temp image storage) and ensure that the cleanup process terminates gracefully on 
       app termination -->
  <listener>
    <listener-class>org.apache.commons.fileupload.servlet.FileCleanerCleanup</listener-class>
  </listener>

  <!-- Bootstrap listener to start up Spring's root WebApplicationContext. Should be after the Log4jConfigListener if such is
       used. --> 
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- Sets the webapp's session timeout (minutes). -->
  <session-config>
    <session-timeout>1</session-timeout>
  </session-config>
   
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Restricted URLs</web-resource-name>
      <url-pattern>/</url-pattern>
    </web-resource-collection>
    <user-data-constraint>
      <transport-guarantee>CONFIDENTIAL</transport-guarantee>
    </user-data-constraint>
  </security-constraint>
</web-app>
