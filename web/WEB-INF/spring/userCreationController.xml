<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">
  <!--  
     Spring ApplicationContext configuration for mobility data upload 
  -->

  <!-- Basic HTTP Validation -->
  <bean id="userCreationHttpServletRequestValidator" class="org.ohmage.jee.servlet.validator.UserCreationValidator" />
  
  <!-- Create the AwRequest Object -->
  <bean id="userCreationAwRequestCreator" class="org.ohmage.jee.servlet.glue.UserCreationRequestCreator" />
  
  <!-- Write the Response -->
  <bean id="userCreationResponseWriter" class="org.ohmage.jee.servlet.writer.SuccessOrFailResponseWriter">
    <constructor-arg index="0">
      <bean id="campaignCreationErrorResponse" class="org.ohmage.domain.ErrorResponse">
        <property name="code" value="1316" />
        <property name="text" value="User creation failed." />
      </bean>
    </constructor-arg>
  </bean>
  
  <!-- Controller Definition -->
  <bean id="userCreationController" class="org.ohmage.controller.ControllerImpl">
    <constructor-arg index="0">
      <!-- Services List (expected to be executed in-order) -->
      <list>
        <!-- Authenticate that the token the user is using is a valid token. -->
        <ref bean="tokenBasedAuthenticationService" />
        
        <!-- Validate that the requesting user is an admin. -->
        <ref bean="requesterIsAdminService" />
        
        <!-- Ensure that a user with the same name doesn't already exist. -->
        <ref bean="newUsernameDoesNotExistService" />
        
        <!-- Add the user. -->
        <ref bean="userCreationService" />
      </list>
    </constructor-arg>
    <constructor-arg index="1">
      <!-- The annotator for when something fails after validation but before the writer. -->
      <ref bean="serverErrorRequestAnnotator" />
    </constructor-arg>
    <property name="validators">
      <!-- Validates the individual items in the request. -->
      <list>
        <ref bean="userTokenValidator" />
        
        <!-- Validate the new credentials -->
        <ref bean="newUsernameValidator" />
        <ref bean="newPasswordValidator" />
        
        <!-- Validate the user privileges. -->
        <ref bean="enabledRequiredValidator" />
        <ref bean="adminRequiredValidator" />
        <ref bean="newAccountOptionalValidator" />
        <ref bean="campaignCreationPrivilegeOptionalValidator" />
      </list>
    </property>
    <property name="featureName">
      <value>user creation</value>
    </property>
  </bean>
  
  <bean id="userCreationService" class="org.ohmage.service.SimpleQueryService">
    <constructor-arg>
      <bean class="org.ohmage.dao.UserCreationDao">
        <constructor-arg>
          <ref bean="dataSource" />
        </constructor-arg>
      </bean>
    </constructor-arg>
  </bean>
  
</beans>