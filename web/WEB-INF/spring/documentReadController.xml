<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

  <!-- Basic HTTP Validation -->
  <bean id="documentReadHttpServletRequestValidator" class="org.ohmage.jee.servlet.validator.DocumentReadValidator" />
  
  <!-- Create the AwRequest Object -->
  <bean id="documentReadAwRequestCreator" class="org.ohmage.jee.servlet.glue.DocumentReadAwRequestCreator" />
  
  <!-- Write the Response -->
  <bean id="documentReadResponseWriter" class="org.ohmage.jee.servlet.writer.DocumentReadResponseWriter">
    <constructor-arg>
      <bean class="org.ohmage.domain.ErrorResponse">
        <property name="code" value="1500" />
        <property name="text" value="General document read error." />
      </bean>
    </constructor-arg>
  </bean>
  
  <!-- Controller Definition -->
  <bean id="documentReadController" class="org.ohmage.controller.ControllerImpl">
    <constructor-arg>
      <!-- Services List (expected to be executed in-order) -->
      <list>
        <!-- Authenticate that the token the user is using is a valid token. -->
        <ref bean="tokenBasedAuthenticationService" />
        
        <!-- Validate that all the campaigns in the campaign list exist. -->
        <ref bean="campaignsInListExistAndRequestingUserBelongsOptionalService" />
        
        <!-- Validate that all the classes in the class list exist. -->
        <ref bean="classesInListExistOptionalService" />
        
        <!-- Retrieve the documents for the current user. -->
        <ref bean="documentIdAggregationSpecificToRequestingUserRequiredService" />
        
        <!-- Retrieve the documents for the campaigns in the list. -->
        <ref bean="documentIdAggregationFromCampaignListOptionalService" />
        
        <!-- Retrieve the documents for the classes in the list. -->
        <ref bean="documentIdAggregationFromClassListOptionalService" />
        
        <!-- Get the classes and campaigns and document roles for each of the document IDs. -->
        <ref bean="documentReadResponseBuilderService" />
        
      </list>
    </constructor-arg>
    <constructor-arg index="1">
      <!-- The annotator for when something fails after validation but before the writer. -->
      <ref bean="serverErrorRequestAnnotator" />
    </constructor-arg>
    <property name="validators">
      <!-- Validates the individual items in the request. -->
      <list>
        <!-- Validate each of the items in the request. -->
        <ref bean="userTokenValidator" />
        
        <!-- Make sure the personal documents boolean is true or false. -->
        <ref bean="documentPersonalDocumentsValueRequiredValidator" />
        
        <!-- Ensure that the list of URNs are valid URNs. -->
        <ref bean="campaignUrnListOptionalValidator" />
        <ref bean="classUrnListOptionalValidator" />
      </list>
    </property>
    <property name="featureName"><value>document read document</value></property>
  </bean>
  
  <bean id="documentReadResponseBuilderService" class="org.ohmage.service.DocumentReadResponseBuilderService">
    <constructor-arg>
      <bean class="org.ohmage.dao.DocumentInformationAggregationDao">
        <constructor-arg>
          <ref bean="dataSource" />
        </constructor-arg>
        <constructor-arg>
          <util:constant static-field="org.ohmage.service.DocumentIdAggregationService.KEY_DOCUMENT_ID_AGGREGATION_SERVICE_RESULT"/>
        </constructor-arg>
      </bean>
    </constructor-arg>
  </bean>
</beans>