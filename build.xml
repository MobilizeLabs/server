<?xml version="1.0"?>
<project name="webapp-ohmage" basedir="." default="dist-all">
  <property file="build.properties"/>
  <property name="library" location="lib"/>
  <property name="app_name" value="ohmage"/>
  <property name="app_version" value="2.11"/>
  <property name="src" location="src"/>
  <property name="test" location="test"/>
  <property name="view" location="view"/>
  <property name="resources" location="web"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>

  <fileset id="compile-dependencies" dir="${library}">
    <include name="log4j-1.2.16.jar"/>
    <include name="servlet-api-3.0.jar"/>
    <include name="org.springframework.beans-3.0.5.RELEASE.jar" />
    <include name="org.springframework.context-3.0.5.RELEASE.jar" />
    <include name="org.springframework.core-3.0.5.RELEASE.jar" />
    <include name="org.springframework.jdbc-3.0.5.RELEASE.jar" />
    <include name="org.springframework.transaction-3.0.5.RELEASE.jar" />
    <include name="commons-logging-1.1.1.jar"/>
    <include name="commons-dbcp-1.2.2.jar"/>
    <include name="commons-io-1.3.2.jar"/>
    <include name="commons-fileupload-1.2.2.jar"/>
    <include name="commons-pool-1.5.4.jar"/>
    <include name="json.org-2011-11-03.jar"/>
    <include name="jbcrypt-0.3.jar"/>
    <include name="xom-1.2.6.jar"/>
    <include name="mobility-classifier-1.2.9.jar"/>
  	<include name="httpcore-4.1.2.jar"/>
  	<include name="httpclient-4.1.2.jar"/>
  	<include name="httpmime-4.1.2.jar"/>
  	<include name="junit-4.10.jar"/>
  	<include name="tomcat-coyote.jar"/>
    <include name="recaptcha4j-0.0.7.jar"/>
    <include name="mail.jar"/>
  </fileset>

  <fileset id="run-dependencies" dir="${library}">
    <include name="log4j-1.2.16.jar"/>
    <include name="org.springframework.asm-3.0.5.RELEASE.jar" />
    <include name="org.springframework.beans-3.0.5.RELEASE.jar" />
    <include name="org.springframework.context-3.0.5.RELEASE.jar" />
    <include name="org.springframework.core-3.0.5.RELEASE.jar" />
    <include name="org.springframework.expression-3.0.5.RELEASE.jar" />
    <include name="org.springframework.jdbc-3.0.5.RELEASE.jar" />
    <include name="org.springframework.transaction-3.0.5.RELEASE.jar" />
    <include name="org.springframework.web-3.0.5.RELEASE.jar" />
    <include name="mysql-connector-java-5.1.10-bin.jar"/>
    <include name="commons-logging-1.1.1.jar"/>
    <include name="commons-dbcp-1.2.2.jar"/>
    <include name="commons-io-1.3.2.jar"/>
    <include name="commons-fileupload-1.2.2.jar"/>
    <include name="commons-pool-1.5.4.jar"/>
    <include name="json.org-2011-11-03.jar"/>
    <include name="jbcrypt-0.3.jar"/>
    <include name="xom-1.2.6.jar"/>
    <include name="mobility-classifier-1.2.9.jar"/>
    <include name="recaptcha4j-0.0.7.jar"/>
    <include name="mail.jar"/>
  </fileset>

  <path id="compile-classpath">
    <fileset refid="compile-dependencies"/>
  </path>

  <path id="run-classpath">
    <fileset refid="run-dependencies"/>
  </path>
  
  <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
    <classpath path="${library}/sonar-ant-task-1.1.jar" /> 
  </taskdef>

  <target name="clean" description="Removes output directories (e.g. build and dist).">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete file="web/META-INF/system.properties"/>
  </target>

  <target name="javac" description="Compiles Java files.">
  	<mkdir dir="${build}/classes"/>
    <javac destdir="${build}/classes" source="1.6" target="1.6"
          debug="true" deprecation="true" optimize="true" failonerror="true" 
    	  encoding="UTF-8">
      <compilerarg value="-Xlint:unchecked"/>
      <src path="${src}"/>
      <src path="${test}"/>
      <exclude name="org/ohmage/test"/>
      <classpath refid="compile-classpath"/>
    </javac>
  </target>
	
  <target name="javac-validator" description="Compiles Java files to create the campaign validator.">
    <mkdir dir="${build}/classes"/>
    <javac destdir="${build}/classes" source="1.6" target="1.6"
          debug="true" deprecation="true" optimize="true" failonerror="true" 
    	  encoding="UTF-8">
      <compilerarg value="-Xlint:unchecked"/>
      <src path="${src}"/>
      <include name="org/ohmage/config/**" />
      <include name="org/ohmage/util/StringUtils.java" />
      <classpath refid="compile-classpath"/>
    </javac>
  </target>
	
  <target name="javac-library" description="Compiles Java files to create the ohmage library.">
    <mkdir dir="${build}/classes"/>
  	<javac destdir="${build}/classes" source="1.6" target="1.6"
  	      debug="true" deprecation="true" optimize="true" failonerror="true" 
  	      encoding="UTF-8" includeantruntime="false">
  	  <compilerarg value="-Xlint:unchecked"/>
  	  <src path="${src}"/>
  	  <include name="org/ohmage/domain/**" />
  	  <include name="org/ohmage/lib/**" />
  	  <include name="org/ohmage/util/**" />
      <include name="org/ohmage/exception/WorkflowException.java" />
      <include name="org/ohmage/exception/DomainException.java" />
      <exclude name="org/ohmage/domain/Audit.java" />
  	  <classpath refid="compile-classpath"/>
  	</javac>
  </target>

  <target name="javadoc" description="Compiles Javadocs.">
    <mkdir dir="${build}/docs"/>
    <javadoc destdir="${build}/docs" private="true" link="http://java.sun.com/javase/6/docs/api/"
             encoding="UTF-8" additionalparam="-quiet">
      <fileset dir="${src}">
        <include name="**/*.java"/>
      </fileset>
       <classpath refid="compile-classpath"/>
    </javadoc>
  </target>
	
  <target name="javadoc-library" description="Compiles Javadocs for the library only.">
    <mkdir dir="${build}/docs"/>
    <javadoc destdir="${build}/docs" private="true" link="http://java.sun.com/javase/6/docs/api/"
             encoding="UTF-8" additionalparam="-quiet">
      <fileset dir="${src}">
        <include name="org/ohmage/domain/**" />
        <include name="org/ohmage/lib/**" />
        <include name="org/ohmage/util/**" />
      	<include name="org/ohmage/annotator/**" />
        <include name="org/ohmage/exception/WorkflowException.java" />
        <include name="org/ohmage/exception/DomainException.java" />
      	<exclude name="org/ohmage/domain/Audit.java" />
      </fileset>
      <classpath refid="compile-classpath"/>
    </javadoc>
  </target>
	
  <path id="classpath.test">
	<fileset refid="compile-dependencies"/>
    <pathelement location="${build}/classes"/>
  </path>
	
  <target name="test" depends="javac" description="Executes the JUnit tests.">
  	<junit printsummary="yes" haltonfailure="yes">
  	  <classpath refid="classpath.test"/>
  	  <formatter type="plain" usefile="false" />

  	  <test name="org.ohmage.validator.ValidatorTests"/>
  	</junit>
  </target>

  <target name="dist" depends="test, javac" description="Compiles Java files and creates WAR.">
    <mkdir dir="${dist}"/>
    <exec executable="git" outputproperty="git.revision" failifexecutionfails="true">
      <arg value="log"/>
      <arg value="--pretty=format:%h"/>
      <arg value="-1"/>
    </exec>
    <propertyfile file="system.properties" comment="This file is automatically generated - DO NOT EDIT!">
      <entry key="application_name" default="${app_name}"/>
      <entry key="application_version" default="${app_version}"/>
      <entry key="application_build" default="${git.revision}"/>
      <entry key="ssl_enabled" default="true"/>
    </propertyfile>
    <move file="system.properties" todir="web/META-INF"/>
    <war webxml="${resources}/WEB-INF/web-ssl.xml" destfile="${dist}/${ant.project.name}-${app_version}.war">
      <classes dir="${build}/classes"/>
      <exclude name="**/*Test.java"/>
      <lib refid="run-dependencies"/>
      <webinf dir="${resources}/WEB-INF">
        <exclude name="web-no_ssl.xml"/>
        <exclude name="web-ssl.xml"/>
      </webinf>
      <metainf dir="${resources}/META-INF">
        <exclude name="MANIFEST.MF"/>
      </metainf>
      <zipfileset dir="${resources}">
        <exclude name="META-INF/**"/>
        <exclude name="WEB-INF/**"/>
      </zipfileset>
    </war>
  </target>

  <target name="dist-no_ssl" depends="test, javac" description="Compiles Java files and creates WAR.">
    <mkdir dir="${dist}"/>
    <exec executable="git" outputproperty="git.revision" failifexecutionfails="true">
      <arg value="log"/>
      <arg value="--pretty=format:%h"/>
      <arg value="-1"/>
    </exec>
    <propertyfile file="system.properties" comment="This file is automatically generated - DO NOT EDIT!">
      <entry key="application_name" default="${app_name}"/>
      <entry key="application_version" default="${app_version}"/>
      <entry key="application_build" default="${git.revision}"/>
      <entry key="ssl_enabled" default="false"/>
    </propertyfile>
    <move file="system.properties" todir="web/META-INF"/>
    <war webxml="${resources}/WEB-INF/web-no_ssl.xml" destfile="${dist}/${ant.project.name}-${app_version}-no_ssl.war">
      <classes dir="${build}/classes"/>
      <exclude name="**/*Test.java"/>
      <lib refid="run-dependencies"/>
      <webinf dir="${resources}/WEB-INF">
        <exclude name="web-no_ssl.xml"/>
        <exclude name="web-ssl.xml"/>
      </webinf>
      <metainf dir="${resources}/META-INF">
        <exclude name="MANIFEST.MF"/>
      </metainf>
      <zipfileset dir="${resources}">
        <exclude name="META-INF/**"/>
        <exclude name="WEB-INF/**"/>
      </zipfileset>
    </war>
  </target>
	
  <target name="dist-validator" depends="javac-validator" 
  	    description="Compiles Java files and creates an executable jar file with the dependencies embedded.">
    <mkdir dir="${dist}"/>
    <jar destfile="${dist}/${app_name}-${app_version}-validator.jar">
      <fileset dir="${build}/classes">
        <include name="org/ohmage/config/**" />
      	<include name="org/ohmage/util/StringUtils.class" />
      </fileset>
      <zipfileset src="${library}/json.org-2011-11-03.jar" excludes="META-INF/*" />
      <zipfileset src="${library}/log4j-1.2.16.jar" excludes="META-INF/*" />
      <zipfileset src="${library}/xom-1.2.6.jar" excludes="META-INF/*" />
      <zipfileset src="${library}/xercesImpl-2.11.0.jar" excludes="META-INF/*" />
      <manifest>
        <attribute name="Main-Class" value="org.ohmage.config.xml.CampaignValidator" />
      </manifest>
    </jar>
  </target>

  <target name="dist-library" depends="javac-library, javadoc-library"
        description="Compiles java files to create the library JAR.">
    <mkdir dir="${dist}"/>
    <jar destfile="${dist}/ohmage-${app_version}-api.jar">
      <fileset dir="${build}/classes">
      	<include name="org/ohmage/domain/**" />
  	    <include name="org/ohmage/lib/**" />
      	<include name="org/ohmage/util/**" />
        <include name="org/ohmage/exception/WorkflowException.java" />
        <include name="org/ohmage/exception/DomainException.java" />
        <exclude name="org/ohmage/domain/Audit.java" />
  	  </fileset>
      <fileset dir="${build}">
        <include name="docs/**" />
      </fileset>
      <zipfileset src="${library}/xom-1.2.6.jar" excludes="META-INF/*" />
  	  <zipfileset src="${library}/json.org-2011-11-03.jar" excludes="META-INF/*" />
  	  <zipfileset src="${library}/httpcore-4.1.2.jar" excludes="META-INF/*" />
  	  <zipfileset src="${library}/httpclient-4.1.2.jar" excludes="META-INF/*" />
  	  <zipfileset src="${library}/httpmime-4.1.2.jar" excludes="META-INF/*" />
      <zipfileset src="${library}/commons-logging-1.1.1.jar" excludes="META-INF/*" />
    </jar>
  </target>

  <target name="dist-docs" depends="javadoc" description="Compiles Javadocs and creates gzipped tarball.">
    <mkdir dir="${dist}"/>
    <tar basedir="${build}/docs" destfile="${dist}/${ant.project.name}-docs-${app_version}.tar.gz" longfile="gnu" compression="gzip"/>
    <zip basedir="${build}/docs" destfile="${dist}/${ant.project.name}-docs-${app_version}.zip" encoding="UTF-8" compress="true"/>
  </target>

  <target name="dist-all" depends="dist,dist-docs" description="Creates full distribution (WAR and docs)."/>
  <target name="dist-all-no_ssl" depends="dist-no_ssl,dist-docs" description="Creates full distribution (WAR and docs)."/>
  
  <target name="sonar">
    <sonar:sonar workDir="${user.home}/tmp" key="org.ohmage:example" version="${app_version}" xmlns:sonar="antlib:org.sonar.ant">
      <sources>
        <path location="${src}" />
      </sources>
      <property key="sonar.java.source" value="1.6" />
      <property key="sonar.java.target" value="1.6" />
    </sonar:sonar>
  </target>
  
</project>