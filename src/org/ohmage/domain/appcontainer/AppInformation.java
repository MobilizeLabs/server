package org.ohmage.domain.appcontainer;

import java.net.URI;

import org.ohmage.domain.exception.InvalidArgumentException;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * <p>
 * Information about an application, including a URI to get the application and
 * a URI to authorize ohmage to read the data generated by the application.
 * </p>
 *
 * @author John Jenkins
 */
public class AppInformation {
    /**
     * The JSON key for the application's URI.
     */
    public static final String JSON_KEY_APP_URI = "app_uri";

    /**
     * The JSON key for the authorization URI.
     */
    public static final String JSON_KEY_AUTHORIZATION_URI =
        "authorization_uri";

    /**
     * The URI to use to direct the user to installing the application.
     */
    @JsonProperty(JSON_KEY_APP_URI)
    private final URI appUri;

    /**
     * The URI to use to direct the user to authorize the application.
     */
    @JsonProperty(JSON_KEY_AUTHORIZATION_URI)
    private final URI authorizationUri;

    /**
     * Creates a new or reconstructs an existing AppInformation object.
     *
     * @param appUri
     *        A URI to direct the user to install the application, e.g. the
     *        platform's app store.
     *
     * @param authorizationUri
     *        A URI to direct the user to grant ohmage permission to read
     *        the user's data.
     *
     * @throws InvalidArgumentException
     *         The platform or application URI are null.
     */
    @JsonCreator
    public AppInformation(
        @JsonProperty(JSON_KEY_APP_URI) final URI appUri,
        @JsonProperty(JSON_KEY_AUTHORIZATION_URI) final URI authorizationUri)
        throws InvalidArgumentException {

        if(appUri == null) {
            throw
                new InvalidArgumentException(
                    "The application URI is missing.");
        }

        this.appUri = appUri;
        this.authorizationUri = authorizationUri;
    }

    /**
     * Returns the authorization URI. This may be null.
     *
     * @return The authorization URI or null if no such information was given.
     */
    public URI getAuthorizationUri() {
        return authorizationUri;
    }
}